###############################################################################
# Copyright 2016, 2018 elasql.org contributors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
###############################################################################

# 
# ElaSQL configuration file
# 
# This file is a single place for controlling all constant fields defined in 
# ElaSQL classes. The path of this file should be set as a system property
# keyed "org.vanilladb.dd.config.file" so the content will to be 
# processed during VanillaDdDB initiation.
#


#
# Server package settings
#
# The type of transaction execution engine.
# Currently supported types:
# 0 - Fully replicated d.d. database
# 1 - Calvin style partitioned d.d. database
# 2 - T-Part style partitioned d.d. database
# 3 - Hermes style partitioned d.d. database
# 4 - G-Store style partitioned d.d. database
# 5 - LEAP style partitioned d.d. database
# 6 - Hermes-control style partitioned d.d. database
org.elasql.server.Elasql.SERVICE_TYPE=1
# Set the default partitioning plan if no one is assigned.
org.elasql.server.Elasql.DEFAULT_PARTITION_PLAN=org.elasql.storage.metadata.HashPartitionPlan
# Decides if there is a stand-alone sequencer.
# A stand-alone sequencer is a server that focus on coordination between servers and leading
# group communication. The sequencer will not work as a database server, which means that
# it will not process any query or store any data.
# If this option is enabled, the last server on the communication list will be chosen as 
# the stand-alone sequencer.
org.elasql.server.Elasql.ENABLE_STAND_ALONE_SEQUENCER=false


#
# Cache package settings
#
# Set the number of dispatchers for dispatching records
# from other machines to corresponding transactions.
org.elasql.cache.calvin.CalvinPostOffice.NUM_DISPATCHERS=1


#
# Schedule package settings
#
# Set the default stored procedure factory classes if no one is assigned.
org.elasql.schedule.naive.NaiveScheduler.FACTORY_CLASS=
org.elasql.schedule.calvin.CalvinScheduler.FACTORY_CLASS=


#
# T-Part package settings
#
# Set the size of a batch for scheduling at once
org.elasql.schedule.tpart.TPartScheduler.SCHEDULE_BATCH_SIZE=10
# Set the parameter for T-Part routing strategy
org.elasql.schedule.tpart.CostAwareNodeInserter.BETA=1.0
# Set the expected max size for the fusion table.
# Note that the actual size may exceed this setting a little bit.
org.elasql.schedule.tpart.hermes.FusionTable.EXPECTED_MAX_SIZE=100000
# Set the parameter for Hermes routing strategy
org.elasql.schedule.tpart.hermes.HermesNodeInserter.IMBALANCED_TOLERANCE=0.25


#
# Communication package settings
#
# The number of requests in a batch for total ordering. If the # of real 
# requests is less than the batch size, the no operation request will be 
# pended in that batch.
org.elasql.remote.groupcomm.client.BatchSpcSender.COMM_BATCH_SIZE=1
org.elasql.remote.groupcomm.client.BatchSpcSender.MAX_WAITING_TIME=1000


#
# Migration package settings
#
org.elasql.migration.MigrationSettings.ENABLE_MIGRATION=false
org.elasql.migration.MigrationSettings.MIGRATION_START_TIME=180000
org.elasql.migration.MigrationSettings.MIGRATION_PERIOD=60000
# 0: Stop-copy, 1: Albatross, 2: Squall, 3: MgCrab
org.elasql.migration.MigrationSettings.MIGRATION_ALGORITHM=3
# 0: Predefined, 1: Clay
org.elasql.migration.MigrationSettings.PLANNING_ALGORITHM=0
org.elasql.migration.MigrationSettings.USE_PREDEFINED_PLAN=true
# true: use CHUNK_SIZE_IN_BYTES, false: use CHUNK_SIZE_IN_COUNT as chunk size
org.elasql.migration.MigrationSettings.USE_BYTES_FOR_CHUNK_SIZE=false
org.elasql.migration.MigrationSettings.CHUNK_SIZE_IN_BYTES=1000000
org.elasql.migration.MigrationSettings.CHUNK_SIZE_IN_COUNT=40000


#
# Clay package settings
#
org.elasql.migration.planner.clay.ClayPlanner.MULTI_PARTS_COST=1
org.elasql.migration.planner.clay.ClayPlanner.OVERLOAD_PERCENTAGE=1.3
org.elasql.migration.planner.clay.ClayPlanner.LOOK_AHEAD_MAX=5
org.elasql.migration.planner.clay.ClayPlanner.CLUMP_MAX_SIZE=20
org.elasql.migration.planner.clay.ClayPlanner.MAX_CLUMPS=5000
org.elasql.migration.planner.clay.ClayPlanner.SAMPLE_RATE=0.01


#
# MgCrab package settings
#
org.elasql.migration.mgcrab.MgcrabSettings.ENABLE_TWO_PHASE_BG_PUSH=true
org.elasql.migration.mgcrab.MgcrabSettings.ENABLE_PIPELINING_TWO_PHASE_BG=true
org.elasql.migration.mgcrab.MgcrabSettings.BG_PUSH_START_DELAY=0
org.elasql.migration.mgcrab.MgcrabSettings.ENABLE_CAUGHT_UP=true
org.elasql.migration.mgcrab.MgcrabSettings.START_CAUGHT_UP_DELAY=105000



#
# Recovery package settings
#

# The name of the log file
org.elasql.storage.log.DdLogMgr.LOG_FILE=elasql.log
# To disable the logging mechanism in the storage engine.
# Note that request logging will still work even if this is set to true.
org.elasql.storage.tx.recovery.DdRecoveryMgr.DISABLE_STORAGE_LOGGING=false


#
# Performance package settings
#
# Turn on this option to collect the training data for the estimator.
org.elasql.perf.tpart.TPartPerformanceManager.ENABLE_COLLECTING_DATA=false
# For hermes-control to select which estimator should be used.
# 0 - constant estimator
# 1 - read count estimator
# 2 - sum max network estimator
org.elasql.perf.tpart.TPartPerformanceManager.ESTIMATOR_TYPE=0 
org.elasql.perf.tpart.ai.SumMaxEstimator.MODEL_DIR=saved_models

#
# Control signal
#
org.elasql.perf.tpart.control.PidController.K_P=1.0
org.elasql.perf.tpart.control.PidController.K_I=0.0
org.elasql.perf.tpart.control.PidController.K_D=0.0

org.elasql.perf.tpart.control.RoutingControlActuator.UPDATE_PERIOD=5000
# TPC-C = 0.0004, YCSB = 0.019
org.elasql.perf.tpart.control.RoutingControlActuator.INITIAL_ALPHA=1.0
# CPU Max Capacities
# 0.5 => Set the CPU max of server 0 as 50%, the max for the rest servers is 100%
# 0.5,0.25 => Set the CPU max of server 0 and 1 as 50% and 25% respectively. 
org.elasql.perf.tpart.control.RoutingControlActuator.CPU_MAX_CAPACITIES=1.0

